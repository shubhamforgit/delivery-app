{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shubham.jain1\\\\Desktop\\\\deliveryApp\\\\delivery-app\\\\src\\\\components\\\\PresentOrders.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport { CardGroup } from \"react-bootstrap\";\nimport { getOrders } from \"../axios/Service\";\nimport Order from \"../components/Order\";\n\nfunction save(id, status) {\n  alert(id, status);\n}\n\nconst PresentOrders = props => {\n  const {\n    0: orders,\n    1: setOrders\n  } = useState([]);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  useEffect(() => {\n    getOrders(orders => {\n      let PRESENT_ORDERS = orders.data.filter(order => order.status !== \"Delivered\" && order.status !== \"Cancel\");\n      setOrders(PRESENT_ORDERS);\n      setIsLoading(false);\n    }); //alert(\"useeffect of present orders\")\n  }, []);\n\n  if (isLoading) {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, \"Loading...\");\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(CardGroup, {\n    style: {\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, orders.map((order, index) => {\n    return __jsx(Order, {\n      order: order,\n      onSave: props.onSave,\n      key: index,\n      showSave: true,\n      showStatusDropdown: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 32\n      }\n    });\n  })));\n};\n\nexport default PresentOrders;","map":{"version":3,"sources":["C:/Users/shubham.jain1/Desktop/deliveryApp/delivery-app/src/components/PresentOrders.js"],"names":["useEffect","useState","CardGroup","getOrders","Order","save","id","status","alert","PresentOrders","props","orders","setOrders","isLoading","setIsLoading","PRESENT_ORDERS","data","filter","order","justifyContent","map","index","onSave"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,SAASC,IAAT,CAAcC,EAAd,EAAkBC,MAAlB,EAA0B;AACtBC,EAAAA,KAAK,CAACF,EAAD,EAAKC,MAAL,CAAL;AACH;;AAID,MAAME,aAAa,GAAIC,KAAD,IAAW;AAE7B,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACY,SAAD;AAAA,OAAYC;AAAZ,MAA4Bb,QAAQ,CAAC,IAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,SAAS,CAACQ,MAAM,IAAI;AAChB,UAAII,cAAc,GAAGJ,MAAM,CAACK,IAAP,CAAYC,MAAZ,CAAmBC,KAAK,IAAKA,KAAK,CAACX,MAAN,KAAiB,WAAlB,IAAmCW,KAAK,CAACX,MAAN,KAAiB,QAAhF,CAArB;AACAK,MAAAA,SAAS,CAACG,cAAD,CAAT;AACAD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAJM,CAAT,CADY,CAMZ;AACH,GAPQ,EAON,EAPM,CAAT;;AASA,MAAGD,SAAH,EAAc;AACV,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ;AAGH;;AACD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEM,MAAAA,cAAc,EAAE;AAAlB,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQR,MAAM,CAACS,GAAP,CAAW,CAACF,KAAD,EAAQG,KAAR,KAAkB;AACzB,WAAO,MAAC,KAAD;AAAO,MAAA,KAAK,EAAEH,KAAd;AAAqB,MAAA,MAAM,EAAER,KAAK,CAACY,MAAnC;AAA2C,MAAA,GAAG,EAAED,KAAhD;AAAuD,MAAA,QAAQ,EAAE,IAAjE;AAAuE,MAAA,kBAAkB,EAAE,IAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,CAFR,CADJ,CADJ;AAYH,CA/BD;;AAiCA,eAAeZ,aAAf","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { CardGroup } from \"react-bootstrap\"\r\nimport { getOrders } from \"../axios/Service\"\r\nimport Order from \"../components/Order\"\r\n\r\nfunction save(id, status) {\r\n    alert(id, status)\r\n}\r\n\r\n\r\n\r\nconst PresentOrders = (props) => {\r\n\r\n    const [orders, setOrders] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        getOrders(orders => {\r\n            let PRESENT_ORDERS = orders.data.filter(order => (order.status !== \"Delivered\") && (order.status !== \"Cancel\"))\r\n            setOrders(PRESENT_ORDERS)\r\n            setIsLoading(false)\r\n          })\r\n        //alert(\"useeffect of present orders\")\r\n    }, [])\r\n\r\n    if(isLoading) {\r\n        return (\r\n            <h1>Loading...</h1>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <CardGroup style={{ justifyContent: \"center\" }}>\r\n                {\r\n                    orders.map((order, index) => {\r\n                        return <Order order={order} onSave={props.onSave} key={index} showSave={true} showStatusDropdown={true} />\r\n                    })\r\n                }\r\n            </CardGroup>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PresentOrders"]},"metadata":{},"sourceType":"module"}