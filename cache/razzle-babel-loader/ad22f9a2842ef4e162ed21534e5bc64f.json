{"ast":null,"code":"import _toConsumableArray from \"C:/Users/shubham.jain1/Desktop/deliveryApp/delivery-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\shubham.jain1\\\\Desktop\\\\deliveryApp\\\\delivery-app\\\\src\\\\components\\\\PresentOrders.js\",\n    _this = this;\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport { CardGroup, Spinner } from \"react-bootstrap\";\nimport { getOrders, updateStatus } from \"../axios/Service\";\nimport Order from \"../components/Order\";\n\nfunction save(id, status) {\n  alert(id, status);\n}\n\nvar PresentOrders = function PresentOrders(props) {\n  var _useState = useState([]),\n      orders = _useState[0],\n      setOrders = _useState[1];\n\n  var _useState2 = useState(true),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  useEffect(function () {\n    getOrders(function (orders) {\n      var PRESENT_ORDERS = orders.data.filter(function (order) {\n        return order.status !== \"Delivered\" && order.status !== \"Cancel\";\n      });\n      setOrders(PRESENT_ORDERS);\n      setIsLoading(false);\n    });\n  }, []);\n\n  function changeStatus(id, status) {\n    updateStatus(id, status, function () {\n      var index = orders.findIndex(function (order) {\n        return order.id === id;\n      });\n\n      var tempOrders = _toConsumableArray(orders);\n\n      tempOrders[index].status = status;\n      setOrders(_toConsumableArray(tempOrders));\n    });\n  }\n\n  alert(\"presentorders use effect!\");\n\n  if (isLoading) {\n    return __jsx(Spinner, {\n      animation: \"border\",\n      role: \"status\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      className: \"visually-hidden\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, \"Loading...\"));\n  }\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(CardGroup, {\n    style: {\n      justifyContent: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, orders.map(function (order, index) {\n    return __jsx(Order, {\n      order: order,\n      onSave: changeStatus,\n      key: index,\n      showSave: true,\n      showStatusDropdown: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 32\n      }\n    });\n  })));\n};\n\nexport default PresentOrders;","map":{"version":3,"sources":["C:/Users/shubham.jain1/Desktop/deliveryApp/delivery-app/src/components/PresentOrders.js"],"names":["useEffect","useState","CardGroup","Spinner","getOrders","updateStatus","Order","save","id","status","alert","PresentOrders","props","orders","setOrders","isLoading","setIsLoading","PRESENT_ORDERS","data","filter","order","changeStatus","index","findIndex","tempOrders","justifyContent","map"],"mappings":";;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,iBAAnC;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,kBAAxC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,SAASC,IAAT,CAAcC,EAAd,EAAkBC,MAAlB,EAA0B;AACtBC,EAAAA,KAAK,CAACF,EAAD,EAAKC,MAAL,CAAL;AACH;;AAID,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAE7B,kBAA4BX,QAAQ,CAAC,EAAD,CAApC;AAAA,MAAOY,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAAkCb,QAAQ,CAAC,IAAD,CAA1C;AAAA,MAAOc,SAAP;AAAA,MAAkBC,YAAlB;;AAEAhB,EAAAA,SAAS,CAAC,YAAM;AACZI,IAAAA,SAAS,CAAC,UAAAS,MAAM,EAAI;AAChB,UAAII,cAAc,GAAGJ,MAAM,CAACK,IAAP,CAAYC,MAAZ,CAAmB,UAAAC,KAAK;AAAA,eAAKA,KAAK,CAACX,MAAN,KAAiB,WAAlB,IAAmCW,KAAK,CAACX,MAAN,KAAiB,QAAxD;AAAA,OAAxB,CAArB;AACAK,MAAAA,SAAS,CAACG,cAAD,CAAT;AACAD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAJQ,CAAT;AAKH,GANQ,EAMN,EANM,CAAT;;AAQA,WAASK,YAAT,CAAsBb,EAAtB,EAA0BC,MAA1B,EAAkC;AAC9BJ,IAAAA,YAAY,CAACG,EAAD,EAAKC,MAAL,EAAa,YAAM;AAC3B,UAAIa,KAAK,GAAGT,MAAM,CAACU,SAAP,CAAiB,UAAAH,KAAK;AAAA,eAAIA,KAAK,CAACZ,EAAN,KAAaA,EAAjB;AAAA,OAAtB,CAAZ;;AACA,UAAIgB,UAAU,sBAAOX,MAAP,CAAd;;AACAW,MAAAA,UAAU,CAACF,KAAD,CAAV,CAAkBb,MAAlB,GAA2BA,MAA3B;AACAK,MAAAA,SAAS,oBAAKU,UAAL,EAAT;AACH,KALW,CAAZ;AAMH;;AAEDd,EAAAA,KAAK,CAAC,2BAAD,CAAL;;AAEA,MAAIK,SAAJ,EAAe;AACX,WACI,MAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAA4B,MAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ;AAKH;;AACD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEU,MAAAA,cAAc,EAAE;AAAlB,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQZ,MAAM,CAACa,GAAP,CAAW,UAACN,KAAD,EAAQE,KAAR,EAAkB;AACzB,WAAO,MAAC,KAAD;AAAO,MAAA,KAAK,EAAEF,KAAd;AAAqB,MAAA,MAAM,EAAEC,YAA7B;AAA2C,MAAA,GAAG,EAAEC,KAAhD;AAAuD,MAAA,QAAQ,EAAE,IAAjE;AAAuE,MAAA,kBAAkB,EAAE,IAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,CAFR,CADJ,CADJ;AAYH,CA3CD;;AA6CA,eAAeX,aAAf","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { CardGroup, Spinner } from \"react-bootstrap\"\r\nimport { getOrders, updateStatus } from \"../axios/Service\"\r\nimport Order from \"../components/Order\"\r\n\r\nfunction save(id, status) {\r\n    alert(id, status)\r\n}\r\n\r\n\r\n\r\nconst PresentOrders = (props) => {\r\n\r\n    const [orders, setOrders] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        getOrders(orders => {\r\n            let PRESENT_ORDERS = orders.data.filter(order => (order.status !== \"Delivered\") && (order.status !== \"Cancel\"))\r\n            setOrders(PRESENT_ORDERS)\r\n            setIsLoading(false)\r\n        })\r\n    }, [])\r\n\r\n    function changeStatus(id, status) {\r\n        updateStatus(id, status, () => {\r\n            let index = orders.findIndex(order => order.id === id)\r\n            let tempOrders = [...orders]\r\n            tempOrders[index].status = status\r\n            setOrders([...tempOrders])\r\n        })\r\n    }\r\n\r\n    alert(\"presentorders use effect!\")\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n            </Spinner>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <CardGroup style={{ justifyContent: \"center\" }}>\r\n                {\r\n                    orders.map((order, index) => {\r\n                        return <Order order={order} onSave={changeStatus} key={index} showSave={true} showStatusDropdown={true} />\r\n                    })\r\n                }\r\n            </CardGroup>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PresentOrders"]},"metadata":{},"sourceType":"module"}